{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Homework",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/doc": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/": {
      "get": {
        "tags": [
          "Home"
        ],
        "description": "Home page of the application",
        "parameters": [],
        "responses": {}
      }
    },
    "/signup": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "Renders the view from where user can log in to the application",
        "parameters": [],
        "responses": {}
      },
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Creates a new account for the user. Both email and password need to be correct. After successful login, the JWT token is returned - use it later in Authorization header to access the other endpoints",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/login": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "Renders the view from where user can log in to the application",
        "parameters": [],
        "responses": {}
      },
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Logs the user to the application. Both email and password need to be correct. After successful login, the JWT token is returned - use it later in Authorization header to access the other endpoints",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/todo/": {
      "get": {
        "tags": [
          "Todos"
        ],
        "description": "Gets the list of all todos.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Todos"
        ],
        "description": "Adds the todo based on parameters provided in the request's body",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Todo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/todo/{id}": {
      "get": {
        "tags": [
          "Todos"
        ],
        "description": "Gets todo item of id provided in the path.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Todos"
        ],
        "description": "Deletes a todo of ID provided in the path.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "johnnyD0e@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "P4ssword"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "Todo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Clean the room"
        },
        "deadline": {
          "type": "string",
          "example": "2022-11-11"
        },
        "score": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "name",
        "deadline",
        "score"
      ]
    }
  }
}